import Button from "@/components/ui/Button";
import InputRadioGroup from "@/components/ui/InputRadioGroup";
import InputSelect from "@/components/ui/InputSelect";
import InputUnderlined from "@/components/ui/InputUnderlined";
import { EventTypes } from "@/types/types";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useForm, SubmitHandler, Controller } from "react-hook-form";
import { useRouter } from "next/router";
import ModalFinishedForm from "@/components/ModalFinishedForm";
import { useState } from "react";

function InputContainer({ children }: { children: React.ReactNode }) {
  return <div className="rounded-lg bg-white p-6 shadow-lg">{children}</div>;
}

const Event: NextPage = () => {
  const router = useRouter();

  const [isModalShown, setIsModalShown] = useState(false);

  const {
    register,
    formState: { errors },
    handleSubmit,
    reset,
    control,
  } = useForm<EventTypes>();

  const onSubmit: SubmitHandler<EventTypes> = (data) => {
    console.log(data);
    setIsModalShown(true);
  };

  return (
    <>
      <Head>
        <title>Hackathon - Event</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="bg-cloud bg-repeat-round text-center">
        <Image className="hidden w-full lg:block" src="/images/hackathon-hero-image.png" width={1920} height={270} alt="People working at a hackathon behind computers." />

        <section className="mx-auto w-11/12 max-w-4xl justify-center py-8 lg:py-10">
          <div className="flex flex-col gap-10">
            <div className="flex flex-col gap-4 text-center">
              <h1 className="text-3xl font-bold lg:text-4xl">Please fill out this form!</h1>
              <p className="text-lg">Join us for an exhilarating hackathon experience! Fill out the form below to register and unlock a world of creativity, collaboration, and innovation. Let{"'"}s embark on this exciting journey together!</p>
            </div>

            <form onSubmit={handleSubmit(onSubmit)} className="grid grid-cols-1 gap-6">
              <InputContainer>
                <InputUnderlined {...register("name", { required: true })} intent={errors.name ? "error" : "primary"} errorMessage="Enter your full name" id="fullNameInput" type="text" placeholder="Full name" hideLabel={true}>
                  Name and surname
                </InputUnderlined>
              </InputContainer>

              <InputContainer>
                <InputUnderlined {...register("email", { required: true })} intent={errors.email ? "error" : "primary"} errorMessage="Enter your email" id="emailInput" type="email" placeholder="example@email.com" hideLabel={true}>
                  E-mail
                </InputUnderlined>
              </InputContainer>

              <InputContainer>
                <InputUnderlined {...register("phoneNumber", { required: true })} intent={errors.phoneNumber ? "error" : "primary"} errorMessage="Enter your phone number" id="phoneNumberInput" type="text" placeholder="Phone number" hideLabel={true}>
                  Phone number
                </InputUnderlined>
              </InputContainer>

              <InputContainer>
                <Controller
                  control={control}
                  name="academy"
                  rules={{ required: true }}
                  render={({ field: { onChange } }) => (
                    <InputSelect
                      onChangeController={onChange}
                      label="Select academy:"
                      intent="primary"
                      selectOptions={[
                        { title: "Option 1", value: "hi2" },
                        { title: "Option 2", value: "hi3" },
                        { title: "Option 3", value: "hi1" },
                      ]}
                    />
                  )}
                />
              </InputContainer>

              <InputContainer>
                <Controller
                  control={control}
                  name="group"
                  render={({ field: { onChange } }) => (
                    <InputSelect
                      onChangeController={onChange}
                      label="Select group:"
                      intent={errors.group ? "error" : "primary"}
                      selectOptions={[
                        { title: "Option 1", value: "hi2" },
                        { title: "Option 2", value: "hi3" },
                        { title: "Option 3", value: "hi1" },
                      ]}
                    />
                  )}
                />
              </InputContainer>

              <InputContainer>
                <p className="mb-3 text-left font-bold">Are you ready for 48h work and availability during the hackaton?</p>
                <Controller
                  control={control}
                  name="availability"
                  render={({ field: { onChange, value } }) => (
                    <InputRadioGroup
                      fieldValue={value}
                      onChangeController={onChange}
                      intent="primary"
                      radioGroupOptions={[
                        { title: "Yes", value: "yes" },
                        { title: "No", value: "no" },
                        { title: "Other", value: "other" },
                      ]}
                    />
                  )}
                />
              </InputContainer>

              <InputContainer>
                <p className="mb-3 text-left font-bold">Will you be joining us online or in person?</p>
                <Controller
                  control={control}
                  name="presence"
                  render={({ field: { onChange, value } }) => (
                    <InputRadioGroup
                      fieldValue={value}
                      onChangeController={onChange}
                      intent="primary"
                      radioGroupOptions={[
                        { title: "Online", value: "online" },
                        { title: "In person", value: "inPerson" },
                        { title: "Other", value: "other" },
                      ]}
                    />
                  )}
                />
              </InputContainer>

              <InputContainer>
                <p className="mb-3 text-left font-bold">Tell us your food preferences</p>
                <Controller
                  control={control}
                  name="food"
                  render={({ field: { onChange, value } }) => (
                    <InputRadioGroup
                      fieldValue={value}
                      onChangeController={onChange}
                      intent="primary"
                      radioGroupOptions={[
                        { title: "Vegetarian", value: "vegetarian" },
                        { title: "Vegan", value: "vegan" },
                        { title: "I don't have preferences", value: "noPreferences" },
                        { title: "Other", value: "other" },
                      ]}
                    />
                  )}
                />
              </InputContainer>

              <Button intent="primary" rounded="sm" size="lg" type="submit">
                Confirm
              </Button>
            </form>
          </div>
        </section>
      </main>

      {isModalShown && <ModalFinishedForm isModalShown={isModalShown} setIsModalShown={setIsModalShown} />}
    </>
  );
};

export default Event;
